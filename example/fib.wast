(module
  (type (func (param i32)))
  (func $fib (export "fib")  (param i32) (result i32)
    (if (result i32) (i32.lt_s (local.get 0) (i32.const 2))
        (then (i32.const 1))
        (else (i32.add (call $fib (i32.sub (local.get 0) (i32.const 1)))
                       (call $fib (i32.sub (local.get 0) (i32.const 2)))
             ))
    ))
  (func $fib_iter (export "fib_iter") (param $n i32) (result i32)
        (local $a i32)
        (local $b i32)
        (local $c i32)
        (local.set $a (i32.const 0))
        (local.set $b (i32.const 1))
        (loop $loop
          (local.set $c (i32.add (local.get  $a) (local.get  $b)))
          (local.set $a (local.get  $b))
          (local.set $b (local.get $c))
          (br_if $loop (i32.lt_u (local.get $c) (local.get  $n)))
        )
        (local.get $b)
      )
  (memory 1)
  (data (i32.const 0) "x")
    )
