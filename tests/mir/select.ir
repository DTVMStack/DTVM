; RUN: ircompiler %s -f 0 --args 0 0 | FileCheck %s -check-prefix CHECK0_1
; RUN: ircompiler %s -f 0 --args 0 1 | FileCheck %s -check-prefix CHECK0_2
; RUN: ircompiler %s -f 0 --args 1 0 | FileCheck %s -check-prefix CHECK0_3
; RUN: ircompiler %s -f 0 --args 1 1 | FileCheck %s -check-prefix CHECK0_4

; CHECK0_1: 0x2:i32
; CHECK0_2: 0x1:i32
; CHECK0_3: 0x2:i32
; CHECK0_4: 0x0:i32

func %0 (i32, i32) -> i32 {
    var $2 i32
    var $3 i32
@0:
    $2 = select ($0, const.i32 0, const.i32 1)
    $3 = select ($1, $2, const.i32 2)
    return $3
}

; RUN: ircompiler %s -f 1 --args 0 20 30 | FileCheck %s -check-prefix CHECK1_1
; RUN: ircompiler %s -f 1 --args 10 20 30 | FileCheck %s -check-prefix CHECK1_2
; RUN: ircompiler %s -f 1 --args -10 20 30 | FileCheck %s -check-prefix CHECK1_3
; RUN: ircompiler %s -f 1 --args 10 0 30 | FileCheck %s -check-prefix CHECK1_4
; RUN: ircompiler %s -f 1 --args 0 20 0 | FileCheck %s -check-prefix CHECK1_5

; CHECK1_1: 30:f32
; CHECK1_2: 20:f32
; CHECK1_3: 20:f32
; CHECK1_4: 0:f32
; CHECK1_5: 0:f32

func %1 (i32, f32, f32) -> f32 {
    var $3 f32
@0:
    $3 = select ($0, $1, $2)
    return $3
}