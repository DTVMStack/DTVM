; RUN: ircompiler %s -f 0 --args -10 -11 | FileCheck %s -check-prefix CHECK0_1
; RUN: ircompiler %s -f 0 --args -10 -10 | FileCheck %s -check-prefix CHECK0_2
; RUN: ircompiler %s -f 0 --args -10 -9 | FileCheck %s -check-prefix CHECK0_3
; RUN: ircompiler %s -f 0 --args -10 0 | FileCheck %s -check-prefix CHECK0_4
; RUN: ircompiler %s -f 0 --args -10 9 | FileCheck %s -check-prefix CHECK0_5
; RUN: ircompiler %s -f 0 --args -10 10 | FileCheck %s -check-prefix CHECK0_6
; RUN: ircompiler %s -f 0 --args -10 11 | FileCheck %s -check-prefix CHECK0_7
; RUN: ircompiler %s -f 0 --args 0 -1 | FileCheck %s -check-prefix CHECK0_8
; RUN: ircompiler %s -f 0 --args 0 0 | FileCheck %s -check-prefix CHECK0_9
; RUN: ircompiler %s -f 0 --args 0 1 | FileCheck %s -check-prefix CHECK0_10
; RUN: ircompiler %s -f 0 --args 10 -11 | FileCheck %s -check-prefix CHECK0_11
; RUN: ircompiler %s -f 0 --args 10 -10 | FileCheck %s -check-prefix CHECK0_12
; RUN: ircompiler %s -f 0 --args 10 -9 | FileCheck %s -check-prefix CHECK0_13
; RUN: ircompiler %s -f 0 --args 10 0 | FileCheck %s -check-prefix CHECK0_14
; RUN: ircompiler %s -f 0 --args 10 9 | FileCheck %s -check-prefix CHECK0_15
; RUN: ircompiler %s -f 0 --args 10 10 | FileCheck %s -check-prefix CHECK0_16
; RUN: ircompiler %s -f 0 --args 10 11 | FileCheck %s -check-prefix CHECK0_17

; CHECK0_1: 0x0:i32
; CHECK0_2: 0x1:i32
; CHECK0_3: 0x0:i32
; CHECK0_4: 0x0:i32
; CHECK0_5: 0x0:i32
; CHECK0_6: 0x0:i32
; CHECK0_7: 0x0:i32
; CHECK0_8: 0x0:i32
; CHECK0_9: 0x1:i32
; CHECK0_10: 0x0:i32
; CHECK0_11: 0x0:i32
; CHECK0_12: 0x0:i32
; CHECK0_13: 0x0:i32
; CHECK0_14: 0x0:i32
; CHECK0_15: 0x0:i32
; CHECK0_16: 0x1:i32
; CHECK0_17: 0x0:i32

func %0(i64, i64) -> i32 {
    var $2 i32
@0:
    $2 = cmp ieq ($0, $1)
    return $2
}

; RUN: ircompiler %s -f 1 --args -10 -11 | FileCheck %s -check-prefix CHECK1_1
; RUN: ircompiler %s -f 1 --args -10 -10 | FileCheck %s -check-prefix CHECK1_2
; RUN: ircompiler %s -f 1 --args -10 -9 | FileCheck %s -check-prefix CHECK1_3
; RUN: ircompiler %s -f 1 --args -10 0 | FileCheck %s -check-prefix CHECK1_4
; RUN: ircompiler %s -f 1 --args -10 9 | FileCheck %s -check-prefix CHECK1_5
; RUN: ircompiler %s -f 1 --args -10 10 | FileCheck %s -check-prefix CHECK1_6
; RUN: ircompiler %s -f 1 --args -10 11 | FileCheck %s -check-prefix CHECK1_7
; RUN: ircompiler %s -f 1 --args 0 -1 | FileCheck %s -check-prefix CHECK1_8
; RUN: ircompiler %s -f 1 --args 0 0 | FileCheck %s -check-prefix CHECK1_9
; RUN: ircompiler %s -f 1 --args 0 1 | FileCheck %s -check-prefix CHECK1_10
; RUN: ircompiler %s -f 1 --args 10 -11 | FileCheck %s -check-prefix CHECK1_11
; RUN: ircompiler %s -f 1 --args 10 -10 | FileCheck %s -check-prefix CHECK1_12
; RUN: ircompiler %s -f 1 --args 10 -9 | FileCheck %s -check-prefix CHECK1_13
; RUN: ircompiler %s -f 1 --args 10 0 | FileCheck %s -check-prefix CHECK1_14
; RUN: ircompiler %s -f 1 --args 10 9 | FileCheck %s -check-prefix CHECK1_15
; RUN: ircompiler %s -f 1 --args 10 10 | FileCheck %s -check-prefix CHECK1_16
; RUN: ircompiler %s -f 1 --args 10 11 | FileCheck %s -check-prefix CHECK1_17

; CHECK1_1: 0x1:i32
; CHECK1_2: 0x0:i32
; CHECK1_3: 0x1:i32
; CHECK1_4: 0x1:i32
; CHECK1_5: 0x1:i32
; CHECK1_6: 0x1:i32
; CHECK1_7: 0x1:i32
; CHECK1_8: 0x1:i32
; CHECK1_9: 0x0:i32
; CHECK1_10: 0x1:i32
; CHECK1_11: 0x1:i32
; CHECK1_12: 0x1:i32
; CHECK1_13: 0x1:i32
; CHECK1_14: 0x1:i32
; CHECK1_15: 0x1:i32
; CHECK1_16: 0x0:i32
; CHECK1_17: 0x1:i32

func %1(i64, i64) -> i32 {
    var $2 i32
@0:
    $2 = cmp ine ($0, $1)
    return $2
}

; RUN: ircompiler %s -f 2 --args -10 -11 | FileCheck %s -check-prefix CHECK2_1
; RUN: ircompiler %s -f 2 --args -10 -10 | FileCheck %s -check-prefix CHECK2_2
; RUN: ircompiler %s -f 2 --args -10 -9 | FileCheck %s -check-prefix CHECK2_3
; RUN: ircompiler %s -f 2 --args -10 0 | FileCheck %s -check-prefix CHECK2_4
; RUN: ircompiler %s -f 2 --args -10 9 | FileCheck %s -check-prefix CHECK2_5
; RUN: ircompiler %s -f 2 --args -10 10 | FileCheck %s -check-prefix CHECK2_6
; RUN: ircompiler %s -f 2 --args -10 11 | FileCheck %s -check-prefix CHECK2_7
; RUN: ircompiler %s -f 2 --args 0 -1 | FileCheck %s -check-prefix CHECK2_8
; RUN: ircompiler %s -f 2 --args 0 0 | FileCheck %s -check-prefix CHECK2_9
; RUN: ircompiler %s -f 2 --args 0 1 | FileCheck %s -check-prefix CHECK2_10
; RUN: ircompiler %s -f 2 --args 10 -11 | FileCheck %s -check-prefix CHECK2_11
; RUN: ircompiler %s -f 2 --args 10 -10 | FileCheck %s -check-prefix CHECK2_12
; RUN: ircompiler %s -f 2 --args 10 -9 | FileCheck %s -check-prefix CHECK2_13
; RUN: ircompiler %s -f 2 --args 10 0 | FileCheck %s -check-prefix CHECK2_14
; RUN: ircompiler %s -f 2 --args 10 9 | FileCheck %s -check-prefix CHECK2_15
; RUN: ircompiler %s -f 2 --args 10 10 | FileCheck %s -check-prefix CHECK2_16
; RUN: ircompiler %s -f 2 --args 10 11 | FileCheck %s -check-prefix CHECK2_17

; CHECK2_1: 0x0:i32
; CHECK2_2: 0x0:i32
; CHECK2_3: 0x1:i32
; CHECK2_4: 0x1:i32
; CHECK2_5: 0x1:i32
; CHECK2_6: 0x1:i32
; CHECK2_7: 0x1:i32
; CHECK2_8: 0x0:i32
; CHECK2_9: 0x0:i32
; CHECK2_10: 0x1:i32
; CHECK2_11: 0x0:i32
; CHECK2_12: 0x0:i32
; CHECK2_13: 0x0:i32
; CHECK2_14: 0x0:i32
; CHECK2_15: 0x0:i32
; CHECK2_16: 0x0:i32
; CHECK2_17: 0x1:i32

func %2(i64, i64) -> i32 {
    var $2 i32
@0:
    $2 = cmp islt ($0, $1)
    return $2
}

; RUN: ircompiler %s -f 3 --args -10 -11 | FileCheck %s -check-prefix CHECK3_1
; RUN: ircompiler %s -f 3 --args -10 -10 | FileCheck %s -check-prefix CHECK3_2
; RUN: ircompiler %s -f 3 --args -10 -9 | FileCheck %s -check-prefix CHECK3_3
; RUN: ircompiler %s -f 3 --args -10 0 | FileCheck %s -check-prefix CHECK3_4
; RUN: ircompiler %s -f 3 --args -10 9 | FileCheck %s -check-prefix CHECK3_5
; RUN: ircompiler %s -f 3 --args -10 10 | FileCheck %s -check-prefix CHECK3_6
; RUN: ircompiler %s -f 3 --args -10 11 | FileCheck %s -check-prefix CHECK3_7
; RUN: ircompiler %s -f 3 --args 0 -1 | FileCheck %s -check-prefix CHECK3_8
; RUN: ircompiler %s -f 3 --args 0 0 | FileCheck %s -check-prefix CHECK3_9
; RUN: ircompiler %s -f 3 --args 0 1 | FileCheck %s -check-prefix CHECK3_10
; RUN: ircompiler %s -f 3 --args 10 -11 | FileCheck %s -check-prefix CHECK3_11
; RUN: ircompiler %s -f 3 --args 10 -10 | FileCheck %s -check-prefix CHECK3_12
; RUN: ircompiler %s -f 3 --args 10 -9 | FileCheck %s -check-prefix CHECK3_13
; RUN: ircompiler %s -f 3 --args 10 0 | FileCheck %s -check-prefix CHECK3_14
; RUN: ircompiler %s -f 3 --args 10 9 | FileCheck %s -check-prefix CHECK3_15
; RUN: ircompiler %s -f 3 --args 10 10 | FileCheck %s -check-prefix CHECK3_16
; RUN: ircompiler %s -f 3 --args 10 11 | FileCheck %s -check-prefix CHECK3_17

; CHECK3_1: 0x0:i32
; CHECK3_2: 0x0:i32
; CHECK3_3: 0x1:i32
; CHECK3_4: 0x0:i32
; CHECK3_5: 0x0:i32
; CHECK3_6: 0x0:i32
; CHECK3_7: 0x0:i32
; CHECK3_8: 0x1:i32
; CHECK3_9: 0x0:i32
; CHECK3_10: 0x1:i32
; CHECK3_11: 0x1:i32
; CHECK3_12: 0x1:i32
; CHECK3_13: 0x1:i32
; CHECK3_14: 0x0:i32
; CHECK3_15: 0x0:i32
; CHECK3_16: 0x0:i32
; CHECK3_17: 0x1:i32

func %3(i64, i64) -> i32 {
    var $2 i32
@0:
    $2 = cmp iult ($0, $1)
    return $2
}

; RUN: ircompiler %s -f 4 --args -10 -11 | FileCheck %s -check-prefix CHECK4_1
; RUN: ircompiler %s -f 4 --args -10 -10 | FileCheck %s -check-prefix CHECK4_2
; RUN: ircompiler %s -f 4 --args -10 -9 | FileCheck %s -check-prefix CHECK4_3
; RUN: ircompiler %s -f 4 --args -10 0 | FileCheck %s -check-prefix CHECK4_4
; RUN: ircompiler %s -f 4 --args -10 9 | FileCheck %s -check-prefix CHECK4_5
; RUN: ircompiler %s -f 4 --args -10 10 | FileCheck %s -check-prefix CHECK4_6
; RUN: ircompiler %s -f 4 --args -10 11 | FileCheck %s -check-prefix CHECK4_7
; RUN: ircompiler %s -f 4 --args 0 -1 | FileCheck %s -check-prefix CHECK4_8
; RUN: ircompiler %s -f 4 --args 0 0 | FileCheck %s -check-prefix CHECK4_9
; RUN: ircompiler %s -f 4 --args 0 1 | FileCheck %s -check-prefix CHECK4_10
; RUN: ircompiler %s -f 4 --args 10 -11 | FileCheck %s -check-prefix CHECK4_11
; RUN: ircompiler %s -f 4 --args 10 -10 | FileCheck %s -check-prefix CHECK4_12
; RUN: ircompiler %s -f 4 --args 10 -9 | FileCheck %s -check-prefix CHECK4_13
; RUN: ircompiler %s -f 4 --args 10 0 | FileCheck %s -check-prefix CHECK4_14
; RUN: ircompiler %s -f 4 --args 10 9 | FileCheck %s -check-prefix CHECK4_15
; RUN: ircompiler %s -f 4 --args 10 10 | FileCheck %s -check-prefix CHECK4_16
; RUN: ircompiler %s -f 4 --args 10 11 | FileCheck %s -check-prefix CHECK4_17

; CHECK4_1: 0x1:i32
; CHECK4_2: 0x0:i32
; CHECK4_3: 0x0:i32
; CHECK4_4: 0x0:i32
; CHECK4_5: 0x0:i32
; CHECK4_6: 0x0:i32
; CHECK4_7: 0x0:i32
; CHECK4_8: 0x1:i32
; CHECK4_9: 0x0:i32
; CHECK4_10: 0x0:i32
; CHECK4_11: 0x1:i32
; CHECK4_12: 0x1:i32
; CHECK4_13: 0x1:i32
; CHECK4_14: 0x1:i32
; CHECK4_15: 0x1:i32
; CHECK4_16: 0x0:i32
; CHECK4_17: 0x0:i32

func %4(i64, i64) -> i32 {
    var $2 i32
@0:
    $2 = cmp isgt ($0, $1)
    return $2
}

; RUN: ircompiler %s -f 5 --args -10 -11 | FileCheck %s -check-prefix CHECK5_1
; RUN: ircompiler %s -f 5 --args -10 -10 | FileCheck %s -check-prefix CHECK5_2
; RUN: ircompiler %s -f 5 --args -10 -9 | FileCheck %s -check-prefix CHECK5_3
; RUN: ircompiler %s -f 5 --args -10 0 | FileCheck %s -check-prefix CHECK5_4
; RUN: ircompiler %s -f 5 --args -10 9 | FileCheck %s -check-prefix CHECK5_5
; RUN: ircompiler %s -f 5 --args -10 10 | FileCheck %s -check-prefix CHECK5_6
; RUN: ircompiler %s -f 5 --args -10 11 | FileCheck %s -check-prefix CHECK5_7
; RUN: ircompiler %s -f 5 --args 0 -1 | FileCheck %s -check-prefix CHECK5_8
; RUN: ircompiler %s -f 5 --args 0 0 | FileCheck %s -check-prefix CHECK5_9
; RUN: ircompiler %s -f 5 --args 0 1 | FileCheck %s -check-prefix CHECK5_10
; RUN: ircompiler %s -f 5 --args 10 -11 | FileCheck %s -check-prefix CHECK5_11
; RUN: ircompiler %s -f 5 --args 10 -10 | FileCheck %s -check-prefix CHECK5_12
; RUN: ircompiler %s -f 5 --args 10 -9 | FileCheck %s -check-prefix CHECK5_13
; RUN: ircompiler %s -f 5 --args 10 0 | FileCheck %s -check-prefix CHECK5_14
; RUN: ircompiler %s -f 5 --args 10 9 | FileCheck %s -check-prefix CHECK5_15
; RUN: ircompiler %s -f 5 --args 10 10 | FileCheck %s -check-prefix CHECK5_16
; RUN: ircompiler %s -f 5 --args 10 11 | FileCheck %s -check-prefix CHECK5_17

; CHECK5_1: 0x1:i32
; CHECK5_2: 0x0:i32
; CHECK5_3: 0x0:i32
; CHECK5_4: 0x1:i32
; CHECK5_5: 0x1:i32
; CHECK5_6: 0x1:i32
; CHECK5_7: 0x1:i32
; CHECK5_8: 0x0:i32
; CHECK5_9: 0x0:i32
; CHECK5_10: 0x0:i32
; CHECK5_11: 0x0:i32
; CHECK5_12: 0x0:i32
; CHECK5_13: 0x0:i32
; CHECK5_14: 0x1:i32
; CHECK5_15: 0x1:i32
; CHECK5_16: 0x0:i32
; CHECK5_17: 0x0:i32

func %5(i64, i64) -> i32 {
    var $2 i32
@0:
    $2 = cmp iugt ($0, $1)
    return $2
}

; RUN: ircompiler %s -f 6 --args -10 -11 | FileCheck %s -check-prefix CHECK6_1
; RUN: ircompiler %s -f 6 --args -10 -10 | FileCheck %s -check-prefix CHECK6_2
; RUN: ircompiler %s -f 6 --args -10 -9 | FileCheck %s -check-prefix CHECK6_3
; RUN: ircompiler %s -f 6 --args -10 0 | FileCheck %s -check-prefix CHECK6_4
; RUN: ircompiler %s -f 6 --args -10 9 | FileCheck %s -check-prefix CHECK6_5
; RUN: ircompiler %s -f 6 --args -10 10 | FileCheck %s -check-prefix CHECK6_6
; RUN: ircompiler %s -f 6 --args -10 11 | FileCheck %s -check-prefix CHECK6_7
; RUN: ircompiler %s -f 6 --args 0 -1 | FileCheck %s -check-prefix CHECK6_8
; RUN: ircompiler %s -f 6 --args 0 0 | FileCheck %s -check-prefix CHECK6_9
; RUN: ircompiler %s -f 6 --args 0 1 | FileCheck %s -check-prefix CHECK6_10
; RUN: ircompiler %s -f 6 --args 10 -11 | FileCheck %s -check-prefix CHECK6_11
; RUN: ircompiler %s -f 6 --args 10 -10 | FileCheck %s -check-prefix CHECK6_12
; RUN: ircompiler %s -f 6 --args 10 -9 | FileCheck %s -check-prefix CHECK6_13
; RUN: ircompiler %s -f 6 --args 10 0 | FileCheck %s -check-prefix CHECK6_14
; RUN: ircompiler %s -f 6 --args 10 9 | FileCheck %s -check-prefix CHECK6_15
; RUN: ircompiler %s -f 6 --args 10 10 | FileCheck %s -check-prefix CHECK6_16
; RUN: ircompiler %s -f 6 --args 10 11 | FileCheck %s -check-prefix CHECK6_17

; CHECK6_1: 0x0:i32
; CHECK6_2: 0x1:i32
; CHECK6_3: 0x1:i32
; CHECK6_4: 0x1:i32
; CHECK6_5: 0x1:i32
; CHECK6_6: 0x1:i32
; CHECK6_7: 0x1:i32
; CHECK6_8: 0x0:i32
; CHECK6_9: 0x1:i32
; CHECK6_10: 0x1:i32
; CHECK6_11: 0x0:i32
; CHECK6_12: 0x0:i32
; CHECK6_13: 0x0:i32
; CHECK6_14: 0x0:i32
; CHECK6_15: 0x0:i32
; CHECK6_16: 0x1:i32
; CHECK6_17: 0x1:i32

func %6(i64, i64) -> i32 {
    var $2 i32
@0:
    $2 = cmp isle ($0, $1)
    return $2
}

; RUN: ircompiler %s -f 7 --args -10 -11 | FileCheck %s -check-prefix CHECK7_1
; RUN: ircompiler %s -f 7 --args -10 -10 | FileCheck %s -check-prefix CHECK7_2
; RUN: ircompiler %s -f 7 --args -10 -9 | FileCheck %s -check-prefix CHECK7_3
; RUN: ircompiler %s -f 7 --args -10 0 | FileCheck %s -check-prefix CHECK7_4
; RUN: ircompiler %s -f 7 --args -10 9 | FileCheck %s -check-prefix CHECK7_5
; RUN: ircompiler %s -f 7 --args -10 10 | FileCheck %s -check-prefix CHECK7_6
; RUN: ircompiler %s -f 7 --args -10 11 | FileCheck %s -check-prefix CHECK7_7
; RUN: ircompiler %s -f 7 --args 0 -1 | FileCheck %s -check-prefix CHECK7_8
; RUN: ircompiler %s -f 7 --args 0 0 | FileCheck %s -check-prefix CHECK7_9
; RUN: ircompiler %s -f 7 --args 0 1 | FileCheck %s -check-prefix CHECK7_10
; RUN: ircompiler %s -f 7 --args 10 -11 | FileCheck %s -check-prefix CHECK7_11
; RUN: ircompiler %s -f 7 --args 10 -10 | FileCheck %s -check-prefix CHECK7_12
; RUN: ircompiler %s -f 7 --args 10 -9 | FileCheck %s -check-prefix CHECK7_13
; RUN: ircompiler %s -f 7 --args 10 0 | FileCheck %s -check-prefix CHECK7_14
; RUN: ircompiler %s -f 7 --args 10 9 | FileCheck %s -check-prefix CHECK7_15
; RUN: ircompiler %s -f 7 --args 10 10 | FileCheck %s -check-prefix CHECK7_16
; RUN: ircompiler %s -f 7 --args 10 11 | FileCheck %s -check-prefix CHECK7_17

; CHECK7_1: 0x0:i32
; CHECK7_2: 0x1:i32
; CHECK7_3: 0x1:i32
; CHECK7_4: 0x0:i32
; CHECK7_5: 0x0:i32
; CHECK7_6: 0x0:i32
; CHECK7_7: 0x0:i32
; CHECK7_8: 0x1:i32
; CHECK7_9: 0x1:i32
; CHECK7_10: 0x1:i32
; CHECK7_11: 0x1:i32
; CHECK7_12: 0x1:i32
; CHECK7_13: 0x1:i32
; CHECK7_14: 0x0:i32
; CHECK7_15: 0x0:i32
; CHECK7_16: 0x1:i32
; CHECK7_17: 0x1:i32

func %7(i64, i64) -> i32 {
    var $2 i32
@0:
    $2 = cmp iule ($0, $1)
    return $2
}

; RUN: ircompiler %s -f 8 --args -10 -11 | FileCheck %s -check-prefix CHECK8_1
; RUN: ircompiler %s -f 8 --args -10 -10 | FileCheck %s -check-prefix CHECK8_2
; RUN: ircompiler %s -f 8 --args -10 -9 | FileCheck %s -check-prefix CHECK8_3
; RUN: ircompiler %s -f 8 --args -10 0 | FileCheck %s -check-prefix CHECK8_4
; RUN: ircompiler %s -f 8 --args -10 9 | FileCheck %s -check-prefix CHECK8_5
; RUN: ircompiler %s -f 8 --args -10 10 | FileCheck %s -check-prefix CHECK8_6
; RUN: ircompiler %s -f 8 --args -10 11 | FileCheck %s -check-prefix CHECK8_7
; RUN: ircompiler %s -f 8 --args 0 -1 | FileCheck %s -check-prefix CHECK8_8
; RUN: ircompiler %s -f 8 --args 0 0 | FileCheck %s -check-prefix CHECK8_9
; RUN: ircompiler %s -f 8 --args 0 1 | FileCheck %s -check-prefix CHECK8_10
; RUN: ircompiler %s -f 8 --args 10 -11 | FileCheck %s -check-prefix CHECK8_11
; RUN: ircompiler %s -f 8 --args 10 -10 | FileCheck %s -check-prefix CHECK8_12
; RUN: ircompiler %s -f 8 --args 10 -9 | FileCheck %s -check-prefix CHECK8_13
; RUN: ircompiler %s -f 8 --args 10 0 | FileCheck %s -check-prefix CHECK8_14
; RUN: ircompiler %s -f 8 --args 10 9 | FileCheck %s -check-prefix CHECK8_15
; RUN: ircompiler %s -f 8 --args 10 10 | FileCheck %s -check-prefix CHECK8_16
; RUN: ircompiler %s -f 8 --args 10 11 | FileCheck %s -check-prefix CHECK8_17

; CHECK8_1: 0x1:i32
; CHECK8_2: 0x1:i32
; CHECK8_3: 0x0:i32
; CHECK8_4: 0x0:i32
; CHECK8_5: 0x0:i32
; CHECK8_6: 0x0:i32
; CHECK8_7: 0x0:i32
; CHECK8_8: 0x1:i32
; CHECK8_9: 0x1:i32
; CHECK8_10: 0x0:i32
; CHECK8_11: 0x1:i32
; CHECK8_12: 0x1:i32
; CHECK8_13: 0x1:i32
; CHECK8_14: 0x1:i32
; CHECK8_15: 0x1:i32
; CHECK8_16: 0x1:i32
; CHECK8_17: 0x0:i32

func %8(i64, i64) -> i32 {
    var $2 i32
@0:
    $2 = cmp isge ($0, $1)
    return $2
}

; RUN: ircompiler %s -f 9 --args -10 -11 | FileCheck %s -check-prefix CHECK9_1
; RUN: ircompiler %s -f 9 --args -10 -10 | FileCheck %s -check-prefix CHECK9_2
; RUN: ircompiler %s -f 9 --args -10 -9 | FileCheck %s -check-prefix CHECK9_3
; RUN: ircompiler %s -f 9 --args -10 0 | FileCheck %s -check-prefix CHECK9_4
; RUN: ircompiler %s -f 9 --args -10 9 | FileCheck %s -check-prefix CHECK9_5
; RUN: ircompiler %s -f 9 --args -10 10 | FileCheck %s -check-prefix CHECK9_6
; RUN: ircompiler %s -f 9 --args -10 11 | FileCheck %s -check-prefix CHECK9_7
; RUN: ircompiler %s -f 9 --args 0 -1 | FileCheck %s -check-prefix CHECK9_8
; RUN: ircompiler %s -f 9 --args 0 0 | FileCheck %s -check-prefix CHECK9_9
; RUN: ircompiler %s -f 9 --args 0 1 | FileCheck %s -check-prefix CHECK9_10
; RUN: ircompiler %s -f 9 --args 10 -11 | FileCheck %s -check-prefix CHECK9_11
; RUN: ircompiler %s -f 9 --args 10 -10 | FileCheck %s -check-prefix CHECK9_12
; RUN: ircompiler %s -f 9 --args 10 -9 | FileCheck %s -check-prefix CHECK9_13
; RUN: ircompiler %s -f 9 --args 10 0 | FileCheck %s -check-prefix CHECK9_14
; RUN: ircompiler %s -f 9 --args 10 9 | FileCheck %s -check-prefix CHECK9_15
; RUN: ircompiler %s -f 9 --args 10 10 | FileCheck %s -check-prefix CHECK9_16
; RUN: ircompiler %s -f 9 --args 10 11 | FileCheck %s -check-prefix CHECK9_17

; CHECK9_1: 0x1:i32
; CHECK9_2: 0x1:i32
; CHECK9_3: 0x0:i32
; CHECK9_4: 0x1:i32
; CHECK9_5: 0x1:i32
; CHECK9_6: 0x1:i32
; CHECK9_7: 0x1:i32
; CHECK9_8: 0x0:i32
; CHECK9_9: 0x1:i32
; CHECK9_10: 0x0:i32
; CHECK9_11: 0x0:i32
; CHECK9_12: 0x0:i32
; CHECK9_13: 0x0:i32
; CHECK9_14: 0x1:i32
; CHECK9_15: 0x1:i32
; CHECK9_16: 0x1:i32
; CHECK9_17: 0x0:i32

func %9(i64, i64) -> i32 {
    var $2 i32
@0:
    $2 = cmp iuge ($0, $1)
    return $2
}
